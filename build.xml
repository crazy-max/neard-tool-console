<?xml version="1.0" encoding="UTF-8"?>
<project name="neard-tool-console" basedir=".">
  
  <dirname property="project.basedir" file="${ant.file.neard-tool-console}"/>
  <property name="root.dir" location="${project.basedir}/.."/>
  <property name="build.properties" value="${project.basedir}/build.properties"/>
  <property file="${build.properties}"/>
  
  <!-- Neard dev -->
  <property name="neard-dev.path" location="${root.dir}/neard-dev"/>
  <fail unless="neard-dev.path" message="Project 'neard-dev' not found in ${neard-dev.path}"/>
  <echo message="Neard dev found in ${neard-dev.path}" level="debug"/> 
  
  <!-- Import build-commons.xml -->
  <import file="${neard-dev.path}/build/build-commons.xml"/>
  <!-- Import build-bundle.xml -->
  <import file="${neard-dev.path}/build/build-bundle.xml"/>
  
  <target name="release.build">
    <basename property="bundle.folder" file="${bundle.path}"/>
    <replaceproperty src="bundle.folder" dest="bundle.version" replace="${bundle.name}" with=""/>
    
    <getmoduleuntouched name="${bundle.name}" version="${bundle.version}" propSrcDest="bundle.srcdest" propSrcFilename="bundle.srcfilename"/>
    <condition property="bundle.srcfinal" value="${bundle.srcdest}/Console2"><available file="${bundle.srcdest}/Console2" type="dir"/></condition>
    <fail unless="bundle.srcfinal" message="Main folder not found"/>
    <assertfile file="${bundle.srcfinal}/Console.exe"/>
    
    <!-- Temp copy -->
    <copy todir="${bundle.srcfinal}" overwrite="true">
      <fileset dir="${bundle.path}" defaultexcludes="yes"/>
    </copy>
    
    <!-- TCC/LE -->
    <if>
      <available file="${bundle.srcfinal}/tccle.properties" type="file"/>
      <then>
        <property name="tccle.path" location="${bundle.srcfinal}/tccle"/>
        <property file="${bundle.srcfinal}/tccle.properties"/>
        <download url="${tccle}" returnProperty="tccle.dest"/>
        <echo message="Check TCC/LE"/>
        <mkdir dir="${tccle.path}"/>
        <copy todir="${tccle.path}" overwrite="true">
          <fileset dir="${tccle.dest}"/>
        </copy>
        <assertfile file="${tccle.path}/tcc.exe"/>
        <delete file="${bundle.srcfinal}/tccle.properties"/>
      </then>
    </if>
    
    <!-- ANSICON -->
    <if>
      <available file="${bundle.srcfinal}/ansicon.properties" type="file"/>
      <then>
        <echo message="Download ANSICON"/>
        <property name="ansicon.path" location="${bundle.srcfinal}/ansi"/>
        <property file="${bundle.srcfinal}/ansicon.properties"/>
        <download url="${ansicon}" returnProperty="ansicon.dest"/>
        <echo message="Check ANSICON"/>
        <mkdir dir="${ansicon.path}"/>
        <copy todir="${ansicon.path}" overwrite="true">
          <fileset dir="${ansicon.dest}/x86"/>
        </copy>
        <assertfile file="${ansicon.path}/ansicon.exe"/>
        <delete file="${bundle.srcfinal}/ansicon.properties"/>
      </then>
    </if>
    
    <delete dir="${bundle.tmp.prep.path}/${bundle.folder}"/>
    <mkdir dir="${bundle.tmp.prep.path}/${bundle.folder}"/>
    <copy todir="${bundle.tmp.prep.path}/${bundle.folder}" overwrite="true">
      <fileset dir="${bundle.srcfinal}"/>
    </copy>
    <copy todir="${bundle.tmp.prep.path}/${bundle.folder}" overwrite="true">
      <fileset dir="${bundle.path}" defaultexcludes="yes" excludes="
        ansicon.properties,
        tccle.properties"
      />
    </copy>
  </target>
</project>
